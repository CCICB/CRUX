% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data_loading_utils.R
\name{maf_data_pool_add_rnaseq}
\alias{maf_data_pool_add_rnaseq}
\title{Add RNAseq -- maf_data_pool version}
\usage{
maf_data_pool_add_rnaseq(maf_data_pool, unique_name, rnaseq_path)
}
\arguments{
\item{maf_data_pool}{see ?new_maf_data_pool for details (maf_data_pool)}

\item{unique_name}{Unique name of the maf_data_wrapper. see ?new_maf_data_wrapper for details (string)}

\item{rnaseq_path}{Path to rnaseq file (string)}
}
\value{
maf_data_pool with updated maf_data_pool_add_rnaseq
}
\description{
Add RNA data to a dataset_wrapper within a maf_data_pool.
}
\details{
How this works: We read in the file at rnaseq_path as data frame, check if it looks like we expect.
If so, the \strong{filepath} is saved to the maf_dataset_wrapper (NOT THE DATAFRAME!).
This is so we don't have to keep the RNA data in memory. When we go to export or visualise, we'll just reload it using \strong{maf_data_wrapper_get_rnaseq_df}, which returns a dataframe (or NULL if none is found). 


Also note that no cohort subsetting will affect this RNA file, as all we have is the filepath. 
This is not a problem, since the functions that export / visualise the data simply load it into memory, then check the clinical datafile to see which samples we need to export. 
If they've been subset out of the clinical datafile, the user probably wont want to export RNA data from these samples ... my export function are aware of this.


Also note, that this file wont be subset
}
